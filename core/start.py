#Copyright @ISmartDevs
#Channel t.me/TheSmartDev

from pyrogram import filters
from pyrogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from config import BOT_USERNAME, OWNER_ID, UPDATE_CHANNEL_URL, COMMAND_PREFIX, BOT_NAME
from utils import LOGGER

def setup_start_handler(app):
    @app.on_message(filters.command(["start"], prefixes=COMMAND_PREFIX) & filters.private)
    async def start_command(client, message):
        LOGGER.info(f"Received /start command from user {message.from_user.id}")
        
        user = message.from_user
        full_name = (user.first_name or "") + (f" {user.last_name}" if user.last_name else "")
        full_name = full_name.strip() or "User"
        user_mention = f"[{full_name}](tg://user?id={user.id})"
        
        welcome_text = (
            f"**‚óë  ú·¥á è {user_mention}, ·¥°·¥á ü·¥Ñ·¥è·¥ç·¥á ·¥õ·¥è ·¥õ ú·¥á  ô·¥è·¥õ**\n"
            f"**‚ûª ·¥õ ú…™s …™s [{BOT_NAME}](t.me/{BOT_USERNAME.lstrip('@')}), ·¥Ä “ì·¥Äs·¥õ & ·¥ò·¥è·¥°·¥á Ä“ì·¥ú ü ·¥õ·¥è·¥è ü·¥ã…™·¥õ.**\n"
            "**‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ**\n"
            "**T·¥è·¥è üs:** ·¥õ·¥á ü·¥á…¢ Ä·¥Ä·¥ç ·¥ús·¥á Ä …™…¥“ì·¥è ·¥Ñ ú·¥á·¥Ñ·¥ã·¥á Ä, …™·¥ò ·¥Ñ ú·¥á·¥Ñ·¥ã·¥á Ä, ·¥ò Ä·¥èx è ·¥Ñ ú·¥á·¥Ñ·¥ã·¥á Ä, s·¥Ñ Ä·¥á·¥á…¥s ú·¥è·¥õ.\n\n"
            "**·¥Ö·¥è·¥°…¥ ü·¥è·¥Ä·¥Ö ·¥ò ü·¥Ä·¥õ“ì·¥è Ä·¥çs:**  è·¥è·¥ú·¥õ·¥ú ô·¥á, “ì·¥Ä·¥Ñ·¥á ô·¥è·¥è·¥ã, …™…¥s·¥õ·¥Ä…¢ Ä·¥Ä·¥ç, ·¥ò…™…¥·¥õ·¥á Ä·¥ás·¥õ, s·¥ò·¥è·¥õ…™“ì è, ·¥õ…™·¥ã·¥õ·¥è·¥ã."
        )
        
        buttons = InlineKeyboardMarkup(
            [
                [InlineKeyboardButton("‚ûï Add Me", url=f"https://t.me/{BOT_USERNAME.lstrip('@')}?startgroup=true")],
                [
                    InlineKeyboardButton("üîß Developer", user_id=OWNER_ID),
                    InlineKeyboardButton("‚úçüèª Support", url=UPDATE_CHANNEL_URL)
                ],
                [InlineKeyboardButton("‚ÑπÔ∏è Help & Command", callback_data="helpmenu")]
            ]
        )
        
        await client.send_photo(
            chat_id=message.chat.id,
            photo="assets/wlc.jpg",
            caption=welcome_text,
            reply_markup=buttons
        )
        LOGGER.info(f"Sent welcome message to user {message.from_user.id}")